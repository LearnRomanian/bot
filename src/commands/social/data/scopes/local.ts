import { _ } from '../../../../../deps.ts';
import configuration from '../../../../configuration.ts';
import { fromHex } from '../../../../utils.ts';
import { fromNames } from '../../module.ts';
import {
	RoleCategory,
	RoleCategoryTypes,
} from '../structures/role-category.ts';
import { RoleCollectionTypes } from '../structures/role-collection.ts';

const categories: RoleCategory[] = [
	{
		name: 'Ethnicities',
		description: 'Roles identifying one\'s ethnicity.',
		type: RoleCategoryTypes.Category,
		color: fromHex('#68d8d6'),
		emoji: 'üóæ',
		restrictToOneRole: false,
		limit: 2,
		collection: {
			type: RoleCollectionTypes.CollectionLocalised,
			onAssignMessage: (name) => `Your ethnicity is now ${name}.`,
			onUnassignMessage: (name) => `Your ethnicity is no longer ${name}.`,
			generateDescription: (name) => `I am of ${name} heritage.`,
			lists: {
				'Armenian': fromNames([
					'Armeno-Tat',
					'Circassian',
					'Hemshen',
					'Hidden',
				]),
				'Romanian': fromNames([
					'Aromanian',
					'Istro-Romanian',
					'Megleno-Romanian',
				]),
			},
		},
	},
	{
		name: 'Dialects',
		description:
			'Roles specifying which dialect of the language one is learning.',
		type: RoleCategoryTypes.Category,
		color: fromHex('#00cc66'),
		emoji: 'üè∑Ô∏è',
		restrictToOneRole: false,
		collection: {
			type: RoleCollectionTypes.CollectionLocalised,
			onAssignMessage: (name) => `You are now learning ${name}.`,
			onUnassignMessage: (name) => `You are no longer learning ${name}.`,
			generateDescription: (name) => `I am learning ${name}.`,
			lists: {
				'Armenian': fromNames(
					configuration.guilds.languages['Armenian'].dialects,
				),
			},
		},
	},
	{
		name: 'Regions',
		description: 'Roles specifying which area of the country one is from.',
		type: RoleCategoryTypes.Category,
		color: fromHex('#c5e0d8'),
		emoji: 'ü§∑‚Äç‚ôÇÔ∏è',
		restrictToOneRole: false,
		limit: 2,
		collection: {
			type: RoleCollectionTypes.CollectionLocalised,
			onAssignMessage: (name) => `You are now from ${name}.`,
			onUnassignMessage: (name) => `You are no longer from ${name}.`,
			generateDescription: (name) => `I am from ${name}.`,
			lists: {
				'Armenian': fromNames([
					'Aragats\'otn / ‘±÷Ä’°’£’°’Æ’∏’ø’∂',
					'Ararat / ‘±÷Ä’°÷Ä’°’ø',
					'Armavir / ‘±÷Ä’¥’°’æ’´÷Ä',
					'Geghark\'unik\' / ‘≥’•’≤’°÷Ä÷Ñ’∏÷Ç’∂’´÷Ñ',
					'Kotayk\' / ‘ø’∏’ø’°’µ÷Ñ',
					'Lorri / ‘º’∏’º’´',
					'Shirak / ’á’´÷Ä’°’Ø',
					'Syunik\' / ’ç’µ’∏÷Ç’∂’´÷Ñ',
					'Tavush / ’è’°’æ’∏÷Ç’∑',
					'Vayots\' Dzor / ’é’°’µ’∏÷Å ’Å’∏÷Ä',
					'Yerevan / ‘µ÷Ä÷á’°’∂',
				]),
				'Belarusian': fromNames([
					'Brest / –ë—Ä—ç—Å—Ü–∫–∞—è',
					'Hrodna / –ì—Ä–æ–¥–∑–µ–Ω—Å–∫–∞—è',
					'Homel / –ì–æ–º–µ–ª—å—Å–∫–∞—è',
					'Mahilyow / –ú–∞–≥—ñ–ª—ë—û—Å–∫–∞—è',
					'Minsk / –ú—ñ–Ω—Å–∫–∞—è',
					'Vitsebsk / –íi—Ü–µ–±—Å–∫–∞—è',
				]),
				'Romanian': fromNames([
					'Banat',
					'Basarabia',
					'Bucovina',
					'Cri»ôana',
					'Dobrogea',
					'Maramure»ô',
					'Moldova',
					'Muntenia',
					'Oltenia',
					'Transilvania',
				]),
			},
		},
	},
];

export default categories;
